# Environment, package and testing specifications for tox.

# Run this using 'tox -r --develop'
# Note that there is a well known bug that tox doesn't realize if the requirements.txt file has changed between runs. 
# See e.g. here https://tox.wiki/en/latest/example/general.html or here https://github.com/tox-dev/tox/issues/149
# To avoid any resulting bugs, always start tox using the '-r' flag, to force a rebuild of the virtual envs everytime.
# The '--develop' option is used so that tox doesn't try to install the package using pypi, which can't work as rescomp
# isn't on there yet, and instead runs 'pip install -e .' behind the scenes.

[tox]
envlist =
    py{36,37,38,39}_oldest_supported
    py{36,37,38,39}_newest_supported
#     py{36,37,38,39}_cutting_edge
#     py{36,37,38,39}_current

# # skips installation of the local package, which in this case is rescomp
# skipsdist = True 

[testenv:py{36,37,38,39}_current]
# install from the pip requirement file "-r" and also keep the virtualenvs up to date "-U".
# Also, don't use spaces here, it will result in the commands failing.
deps = 
    -Ur{toxinidir}/requirements.txt

[testenv:py{36,37,38,39}_oldest_supported]
deps = 
    -Ur{toxinidir}/env_specs/requirements_oldest_supported.txt

[testenv:py{36,37,38,39}_newest_supported]
deps = 
    -Ur{toxinidir}/env_specs/requirements_newest_supported.txt

[testenv:py{36,37,38,39}_cutting_edge]
deps = 
    -Ur{toxinidir}/env_specs/requirements_cutting_edge.txt

[testenv]
commands =
    python -V
    pip -V
    python -m pip -V
    tox --version
    pip list
    pytest -v --tb=no

